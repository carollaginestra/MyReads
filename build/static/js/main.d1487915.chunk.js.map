{"version":3,"sources":["icons/loader.gif","images/no-cover.jpg","utils/BooksAPI.js","components/Loader/index.js","components/Book/index.js","components/BookShelf/index.js","components/Header/index.js","pages/MainPage/index.js","pages/SearchPage/index.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","Loader","react_default","a","createElement","className","src","require","alt","Book","shelfOptions","key","title","updateShelf","event","preventDefault","_this","props","target","value","moveTo","_this$props$book","this","authors","imageLinks","cover","thumbnail","onChange","disabled","map","_ref","Component","BookShelf","_this$props","components_Book","Header","MainPage","items","Books","allItems","Map","set","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","get","push","err","return","allBooks","components_Header","toConsumableArray","_ref2","slicedToArray","item","components_BookShelf","react_router_dom","to","React","SearchPage","state","loading","updateQuery","trim","setState","BooksAPI","error","obj","results","find","b","catch","clearQuery","_this2","_this$state","aria-label","type","placeholder","components_Loader","length","BooksApp","currentState","filter","_this3","react_router","exact","path","render","pages_MainPage","pages_SearchPage","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d1487915.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.def46ae4.gif\";","module.exports = __webpack_public_path__ + \"static/media/no-cover.22975dd1.jpg\";","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from 'react'\n\nconst Loader = () => { \n    return (\n        <div className=\"loader-gif\"> \n            <img src={require('../../icons/loader.gif')} alt=\"loading, please wait\" />\n        </div>\n    )\n}\n\nexport default Loader","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass Book extends Component {\n\n    static propTypes = {\n        book: PropTypes.object,\n        moveTo: PropTypes.func.isRequired,\n    }\n\n    shelfOptions = [\n        { key: 'currentlyReading', title: 'Currently Reading' },\n        { key: 'wantToRead', title: 'Want to Read' },\n        { key: 'read', title: 'Read' },\n        { key: 'none', title: 'None' }\n    ]\n\n    updateShelf = (event) => {\n        event.preventDefault()\n        const { book } = this.props\n        book.shelf = event.target.value\n        this.props.moveTo(book)\n    }\n\n\n    render() {\n\n        const { title, authors, imageLinks, shelf } = this.props.book\n        const cover = imageLinks ? imageLinks.thumbnail : ''\n\n        return (\n            <li>\n                <div className=\"book\">\n                    <div className=\"book-top\">\n                        <div className=\"book-cover\">\n                        {cover !== '' ? (\n                            <img src={cover} alt={title}/>\n                        ) : (\n                            <img src={require('../../images/no-cover.jpg')} alt={title}/>\n                        )}\n                        </div>     \n                        <div className=\"book-shelf-changer\">\n                            <select value={shelf} onChange={this.updateShelf} >\n                                <option value=\"disabled\" disabled>Move to...</option>\n                                {this.shelfOptions.map(({ key, title }) => (\n                                    <option key={key} value={key}>{title}</option>\n                                ))}\n                            </select>\n                        </div>     \n                    </div>\n                    <div className=\"book-title\">{title}</div>\n                    <div className=\"book-authors\">{authors}</div>\n                </div>\n            </li>\n        )\n    }\n}\n\nexport default Book","import React, { Component } from 'react'\nimport Book from '../Book'\nimport PropTypes from 'prop-types'\n\n\nclass BookShelf extends Component {\n\n    static propTypes = {\n        books: PropTypes.array.isRequired,\n        title: PropTypes.string,\n    }\n\n    render() {\n\n        const { title, books } = this.props\n\n        return (\n            <div className=\"bookshelf\">\n                <h2 className=\"bookshelf-title\">{title}</h2>\n                <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">\n                    {books.map((book) =>\n                        <Book key={book.id} book={book}\n                            moveTo={this.props.moveTo} />\n                    )}\n                    </ol>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default BookShelf\n","import React from 'react'\n\nconst Header = () => { \n    return (\n        <div className=\"list-books-title\">\n            <h1>MyReads</h1>\n        </div>\n    )\n}\n\nexport default Header","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport BookShelf from '../../components/BookShelf'\nimport Header from '../../components/Header'\n\nclass MainPage extends React.Component {\n    static propTypes = {\n        books: PropTypes.array.isRequired,\n        moveTo: PropTypes.func.isRequired\n    }\n\n    render() {\n\n        const allBooks = (Books) => {\n            const allItems = new Map();\n            allItems.set('currentlyReading', { title: 'Currently Reading', books: [] })\n            allItems.set('wantToRead', { title: 'Want To Read', books: [] })\n            allItems.set('read', { title: 'Read', books: [] })\n        \n            for (let book of Books) {\n                const item = allItems.get(book.shelf)\n                item.books.push(book)\n            }\n            return allItems\n        }  \n\n        const items = allBooks(this.props.books);\n\n        return (\n            <div className=\"list-books\">\n\n                <Header />\n\n                <div className=\"list-books-content\">\n                    <div>\n                        {[...items].map(([key, item]) =>\n                            <BookShelf\n                                key={key}\n                                title={item.title}\n                                books={item.books}\n                                moveTo={this.props.moveTo}\n                            />\n                        )}\n                    </div>\n                </div>\n        \n                <div className=\"open-search\">\n                    <Link to=\"/search\">Add a book</Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MainPage\n\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport Book from '../../components/Book/index'\nimport * as BooksAPI from '../../utils/BooksAPI'\nimport Loader from '../../components/Loader'\n\nclass SearchPage extends React.Component {\n    static propTypes = {\n        books: PropTypes.array.isRequired,\n        moveTo: PropTypes.func.isRequired\n    }\n\n    state = {\n        query: '',\n        books: [],\n        loading: false,\n    }\n\n    updateQuery = (query) => {\n        query = query.trim()\n        this.setState({query, loading: true})\n\n        BooksAPI.search(query).then((books) => {\n            if (books.error)\n                return []\n\n                return books.map((book) => {\n                    const obj = {...book}\n                    const results = this.props.books.find(b => b.id === obj.id)\n                    book.shelf = results ? results.shelf : 'none'\n                    return book\n                })\n        }).then((books) => {\n            this.setState(() => ({\n                books,\n                loading: false,\n            }))\n        }).catch(() => {\n            this.clearQuery();\n        })\n    }\n\n    clearQuery = () => {\n        this.setState({ books: [], loading: false }) //make the list empty\n    }\n\n    render() {\n        const { books, loading } = this.state\n        const { moveTo } = this.props\n\n        return(\n            <div className=\"search-books\">\n                <div className=\"search-books-bar\">\n                    <Link className=\"close-search\" to=\"/\" title=\"Back\" aria-label=\"Back\">Close</Link>\n                    <div className=\"search-books-input-wrapper\">\n                        <input type=\"text\" placeholder=\"Search by title or author\" \n                            onChange={(event) => this.updateQuery(event.target.value)}/>\n                    </div>\n                </div>\n\n\n                <div className=\"search-books-results\">\n\n                    {loading && (\n                        <Loader />\n                    )}\n\n\n                    {books.length > 0 ? (\n                        <div>\n                            <div className=\"result\">\n                                <b>{books.length}</b> results found.\n                            </div>\n\n                            <ol className=\"books-grid\">\n                                {books.map((book) => (\n                                    <Book key={book.id} book={book} moveTo={moveTo}/>\n                                ))}\n                            </ol>\n                        </div>\n                    ): (\n                        <div className=\"results\">\n                            <b>{books.length}</b> results found.\n\n                            <p>You can try searching for:</p>\n                            <p>\n                                'Android', 'Art', 'Artificial Intelligence', 'Astronomy', 'Austen', 'Baseball', 'Basketball',\n                                'Bhagat', 'Biography', 'Brief', 'Business', 'Camus', 'Cervantes', 'Christie', 'Classics', 'Comics',\n                                'Cook', 'Cricket', 'Cycling', 'Desai', 'Design', 'Development', 'Digital Marketing', 'Drama', 'Drawing',\n                                'Dumas', 'Education', 'Everything', 'Fantasy', 'Film', 'Finance', 'First', 'Fitness', 'Football', 'Future',\n                                'Games', 'Gandhi', 'Homer', 'Horror', 'Hugo', 'Ibsen', 'Journey', 'Kafka', 'King', 'Lahiri', 'Larsson',\n                                'Learn', 'Literary Fiction', 'Make', 'Manage', 'Marquez', 'Money', 'Mystery', 'Negotiate', 'Painting',\n                                'Philosophy', 'Photography', 'Poetry', 'Production', 'Programming', 'React', 'Redux', 'River', 'Robotics',\n                                'Rowling', 'Satire', 'Science Fiction', 'Shakespeare', 'Singh', 'Swimming', 'Tale', 'Thrun', 'Time',\n                                'Tolstoy', 'Travel', 'Ultimate', 'Virtual Reality', 'Web Development', 'iOS'\n                            </p>\n                        </div>\n                    )             \n                    }\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchPage","import React from 'react'\nimport * as BooksAPI from './utils/BooksAPI'\nimport { Route } from 'react-router-dom'\nimport Loader from './components/Loader/index'\nimport MainPage from './pages/MainPage/index'\nimport SearchPage from './pages/SearchPage';\nimport './App.css'\n\nclass BooksApp extends React.Component {\n  state = {\n    books: [],\n    loading: false\n  }\n\n  componentDidMount() {\n    BooksAPI.getAll().then((books) => {\n      this.setState({ books, loading: true })\n    })\n  }\n\n  moveTo = (book) => {\n    BooksAPI.update(book, book.shelf)\n    .then(() => {\n      this.setState((currentState) => ({\n        books: currentState.books.filter((obj) => obj.id !== book.id)\n      }))\n\n      if (book.shelf !== 'none')\n        this.setState((currentState) => ({\n          books: currentState.books.concat([book])\n        }))\n    })\n  }\n\n  render() {\n    if (this.state.loading === false) { \n      return <Loader />\n    } else {\n      return (\n        <div className=\"app\">\n            <Route exact path='/' render={() =>(\n              <MainPage\n                books={this.state.books}\n                moveTo={this.moveTo}\n              />\n            )}/>\n            \n            <Route path='/search' render={() =>(\n              <SearchPage\n                books={this.state.books}\n                moveTo={this.moveTo}\n              />\n            )}/>\n        </div>\n      )\n    }\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n, document.getElementById('root'))\n"],"sourceRoot":""}